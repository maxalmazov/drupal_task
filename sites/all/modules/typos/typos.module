<?php

/**
 * Implements hook_menu().
 */
function typos_menu()
{
    $items = [];
    $items ['admin/config/user-interface/typos'] = [
        'title' => 'Typos report setting',
        'page callback' => 'drupal_get_form',
        'page arguments' => ['typos_admin_settings'],
        'access arguments' => ['administer site configuration'],
        'file' => 'typos.admin.inc',
    ];

    return $items;
}

/**
 * Implements hook_form_field_ui_field_edit_form_alter().
 */
function typos_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id)
{
    if ($form['#field']['type'] == 'text' || $form['#field']['type'] == 'text_long' || $form['#field']['type'] == 'text_with_summary') {
        $form['field']['is_enabled'] = [
            '#type' => 'checkbox',
            '#title' => t('Allow the users to send a report of typos.'),
            '#default_value' => !empty($form['#field']['is_enabled']) ? $form['#field']['is_enabled'] : 0,
        ];

        $form['field']['email'] = [
            '#type' => 'textfield',
            '#title' => t('Email where typos report are sent.'),
            '#default_value' => !empty($form['#field']['email']) ? $form['#field']['email'] : variable_get('site_mail'),
            '#description' => 'Used if allows the users to send a report of typos.',
        ];

        $form['field']['max_chars'] = [
            '#type' => 'textfield',
            '#title' => t('Max chars selection fo report.'),
            '#default_value' => !empty($form['#field']['max_chars']) ? $form['#field']['max_chars'] : variable_get('typos_max_chars', 10),
            '#description' => 'Used if allows the users to send a report of typos.',
        ];

        $form['field']['popup_text'] = [
            '#type' => 'textfield',
            '#title' => t('Text for modal window.'),
            '#default_value' => !empty($form['#field']['popup_text']) ? $form['#field']['popup_text'] : 'Send typo report',
            '#description' => 'Used if allows the users to send a report of typos.',
        ];
        $form['#validate'][] = 'typos_form_field_ui_field_edit_form_alter_validate';
    }
}

function typos_form_field_ui_field_edit_form_alter_validate(&$form, &$form_state)
{
    if (!valid_email_address($form_state['values']['field']['email'])) {
            form_set_error('email', t($form_state['values']['field']['email'].' is not valid email'));
        }

    if(!is_numeric($form_state['values']['field']['max_chars']) || $form_state['values']['field']['max_chars'] < 0) {
        form_set_error('max_chars', t('Maximum characters in selection should be an integer.'));
    } else {
        $form_state['values']['field']['max_chars'] = (int) $form_state['values']['field']['max_chars'];
    }
}

/**
 * Implements hook_theme().
 */
function typos_theme() {
    return [
        'typos_report' => [
            'template' => 'typos-report-form',
        ],
    ];
}

/**
 * Process variables for typos-report-form.tpl.php.
 *
 * @see typos-report-form.tpl.php
 */
function template_preprocess_typos_report(&$variables) {
    $form = drupal_get_form('typos_report_form');
    $variables['typos_report_form'] = drupal_render($form);
}

/**
 * Implements hook_page_build().
 */
function typos_page_build(&$page) {

    ctools_include('ajax');
    ctools_include('modal');

    drupal_add_js(drupal_get_path('module', 'typos') . '/js/typos.template.js');
    drupal_add_js(drupal_get_path('module', 'typos') . '/js/typos.js');
    drupal_add_css(drupal_get_path('module', 'typos') . '/css/typos.css');

    ctools_modal_add_js();

    $settings = [
        'TyposModal' => [
            'loadingText' => t('Send typo report'),
            'closeText' => t('close'),
            'closeImage' => '',
            'throbber' => theme('image', [
                'path' => ctools_image_path('throbber.gif'),
                'title' => t('Loading...'),
                'alt' => t('Loading'),
            ]),
            'modalTheme' => 'TyposModalDialog',
            'animation' => 'show',
            'animationSpeed' => 'fast',
            'modalSize' => [
                'type' => 'scale',
                'width' => '560px',
                'height' => '250px',
                'addWidth' => 0,
                'addHeight' => 0,
                'contentRight' => 25,
                'contentBottom' => 45,
            ],
            'modalOptions' => [
                'opacity' => 0.55,
                'background' => '#000',
            ],
        ],
    ];

    drupal_add_js($settings, 'setting');

    $page['page_bottom']['typos']= [
        '#type' => 'markup',
        '#markup' => '<div id="typos-report-wrapper">' . theme('typos_report') . '</div>',
    ];
}

/**
 * Typo report form
 */
function typos_report_form($form, &$form_state) {
    $form['typos_comment'] = array(
        '#type' => 'textfield',
        '#title' => t('Typos comment'),
        '#default_value' => '',
        '#size' => 60,
        '#maxlength' => 128,
        '#required' => FALSE,
        '#weight' => 1,
    );



    $form['typos_context'] = array(
        '#type' => 'hidden',
        '#default_value' => '',
        '#maxlength' => 128,
        '#required' => FALSE,
        '#weight' => 1,
        '#attributes' => array('id' => 'typos-context'),
    );

    $form['typos_url'] = array(
        '#type' => 'hidden',
        '#default_value' => '',
        '#maxlength' => 256,
        '#required' => FALSE,
        '#weight' => 1,
        '#attributes' => array('id' => 'typos-url'),
    );

    global $user;
    $form['typos_uid'] = array(
        '#type' => 'hidden',
        '#default_value' => $user->uid,
        '#maxlength' => 256,
    );



    return $form;
}